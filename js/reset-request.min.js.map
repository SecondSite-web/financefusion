{"version":3,"sources":["reset-request.js"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reset-request.min.js","sourcesContent":["$(function () {\n    // Validator download from https://jqueryvalidation.org/\n    $(document).ready(function () {\n        $(\"#reset-request-form\").validate({\n            rules: {\n                email: {\n                    required: true,\n                    email: true\n                },\n            },\n            messages: {\n                email: \"Please enter a valid email address\"\n            },\n            errorElement: \"p\",\n            errorPlacement: function ( error, element ) {\n                // Add the `invalid-feedback` class to the error element\n                error.addClass(\"invalid-feedback\");\n\n                if ( element.prop(\"type\") === \"checkbox\" ) {\n                    error.insertAfter(element.next(\"label\"));\n                } else {\n                    error.insertAfter(element);\n                }\n            },\n            highlight: function ( element, errorClass, validClass ) {\n                $(element).addClass(\"is-invalid\").removeClass(\"is-valid\");\n            },\n            unhighlight: function (element, errorClass, validClass) {\n                $(element).addClass(\"is-valid\").removeClass(\"is-invalid\");\n            }\n        });\n    });\n\n    // when the form is submitted\n    $('#reset-request-form').on('submit', function (e) {\n\n        // if the validator does not prevent form submit\n        if (!e.isDefaultPrevented()) {\n            var url = document.location.origin + \"/include/workers/reset-request.php\";\n\n            // POST values in the background the the script URL\n            $.ajax({\n                type: \"POST\",\n                url: url,\n                data: $(this).serialize(),\n                success: function (data) {\n                    // data = JSON object that contact.php returns\n\n                    // we recieve the type of the message: success x danger and apply it to the\n                    var messageAlert = 'alert-' + data.type;\n                    var messageText = data.message;\n\n                    // let's compose Bootstrap alert box HTML\n                    var alertBox = '<div class=\"alert ' + messageAlert + ' alert-dismissable\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">&times;</button>' + messageText + '</div>';\n\n                    // If we have messageAlert and messageText\n                    if (messageAlert && messageText) {\n                        // inject the alert to .messages div in our form\n                        $('#reset-request-form').find('.messages').html(alertBox);\n                        // empty the form\n                        $('#reset-request-form')[0].reset();\n                    }\n\n                }\n            });\n            return false;\n        }\n    })\n});\n\n"]}